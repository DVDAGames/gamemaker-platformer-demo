<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize variables

//physics
gravityForce = 0.2; //force of gravity on player object
terminalVelocity = 10; //maximum downward speed applied by gravity
verticalSpeed = 0; //container for current speed
horizontalSpeed = 0; //container for current speed
moveSpeed = 2; //horizontal speed for moving

normalJumpSpeed = 3;

powerJumpSpeed = 5.5;

jumpSpeed = normalJumpSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset powerup status

jumpSpeed = normalJumpSpeed;

sprite_index = spr_player;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///respond to player input

//check inputs

rightArrow = keyboard_check(vk_right);
leftArrow = -keyboard_check(vk_left);
upArrow = keyboard_check_pressed(vk_up);

//react to inputs

//horizontal movement
move = leftArrow + rightArrow;
horizontalSpeed = move * moveSpeed;

//gravity
if(verticalSpeed &lt; terminalVelocity) {
    verticalSpeed += gravityForce;
}

//check to see if player is on a wall object
if(place_meeting(x, y + 1, obj_wall)) {
    //apply jump velocity
    verticalSpeed = upArrow * -jumpSpeed;
}

//check if we are about to collide with a wall
if(place_meeting(x + horizontalSpeed, y, obj_wall)) {
    //iterate as long as object hasn't collided
    while(!place_meeting(x + sign(horizontalSpeed), y, obj_wall)) {
        x += sign(horizontalSpeed);       
    }
    
    horizontalSpeed = 0;
}

//check if we are about to collide with a wall
if(place_meeting(x, y + verticalSpeed, obj_wall)) {
    //iterate as long as object hasn't collided
    while(!place_meeting(x, y + sign(verticalSpeed), obj_wall)) {
        y += sign(verticalSpeed);       
    }
    
    verticalSpeed = 0;
}

x += horizontalSpeed;
y += verticalSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
